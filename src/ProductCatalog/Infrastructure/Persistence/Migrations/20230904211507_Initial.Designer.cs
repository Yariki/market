// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductCatalog.Infrastructure.Persistence;

#nullable disable

namespace ProductCatalog.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ProductCatalogDbContext))]
<<<<<<<< HEAD:src/ProductCatalog/Infrastructure/Persistence/Migrations/20230806231016_Initial.Designer.cs
    [Migration("20230806231016_Initial")]
========
    [Migration("20230904211507_Initial")]
>>>>>>>> 03adc4f (refactored code and added integration tests):src/ProductCatalog/Infrastructure/Persistence/Migrations/20230904211507_Initial.Designer.cs
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductCatalog.Domain.Catalog.Catalog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Product.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CatalogId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
<<<<<<<< HEAD:src/ProductCatalog/Infrastructure/Persistence/Migrations/20230806231016_Initial.Designer.cs
                        .IsRequired()
                        .HasColumnType("text");
========
                        .HasColumnType("nvarchar(max)");
>>>>>>>> 03adc4f (refactored code and added integration tests):src/ProductCatalog/Infrastructure/Persistence/Migrations/20230904211507_Initial.Designer.cs

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<decimal>("MaxStockThreshold")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
<<<<<<<< HEAD:src/ProductCatalog/Infrastructure/Persistence/Migrations/20230806231016_Initial.Designer.cs
                        .HasColumnType("text");

                    b.Property<string>("PictureFilename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PictureUri")
                        .IsRequired()
                        .HasColumnType("text");
========
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PictureFilename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUri")
                        .HasColumnType("nvarchar(max)");
>>>>>>>> 03adc4f (refactored code and added integration tests):src/ProductCatalog/Infrastructure/Persistence/Migrations/20230904211507_Initial.Designer.cs

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("_availableStock")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("AvailableStock");

                    b.Property<decimal>("_pricePerUnit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PricePerUnit");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.HasIndex("UnitId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Product.SellUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("_scalar")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Scalar");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("SellUnits");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Product.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Abbriviation")
                        .IsRequired()
<<<<<<<< HEAD:src/ProductCatalog/Infrastructure/Persistence/Migrations/20230806231016_Initial.Designer.cs
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");
========
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");
>>>>>>>> 03adc4f (refactored code and added integration tests):src/ProductCatalog/Infrastructure/Persistence/Migrations/20230904211507_Initial.Designer.cs

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Product.Product", b =>
                {
                    b.HasOne("ProductCatalog.Domain.Catalog.Catalog", "Catalog")
                        .WithMany()
                        .HasForeignKey("CatalogId");

                    b.HasOne("ProductCatalog.Domain.Product.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalog");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Product.SellUnit", b =>
                {
                    b.HasOne("ProductCatalog.Domain.Product.Product", null)
                        .WithMany("SellUnits")
                        .HasForeignKey("ProductId");

                    b.HasOne("ProductCatalog.Domain.Product.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Product.Product", b =>
                {
                    b.Navigation("SellUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
